        .text
	.globl  pack2bits_v8
	.p2align        2
	.type   pack2bits_v8,@function
pack2bits_v8:
	// %bb.0:                               // %entry
	cmp     w2, #1                  // =1
	b.lt    .LBB0_3
	// %bb.1:                               // %for.body.preheader
	mov     x8, xzr
	sxtw    x9, w2
	add     x10, x1, #4             // =4
.LBB0_2:                                // %for.body
	// =>This Inner Loop Header: Depth=1
	add     x11, x0, x8
	ldp     w13, w12, [x11]
	add     x8, x8, #16             // =16
	cmp     x8, x9
	and     w14, w13, #0x100
	and     w16, w13, #0x200
	lsr     w14, w14, #7
	and     w15, w13, #0x10000
	bfxil   w14, w13, #0, #1
	lsr     w16, w16, #8
	orr     w14, w14, w15, lsr #14
	and     w15, w13, #0x20000
	bfxil   w16, w13, #1, #1
	orr     w15, w16, w15, lsr #15
	and     w16, w13, #0x1000000
	and     w13, w13, #0x2000000
        orr     w14, w14, w16, lsr #21
	orr     w13, w15, w13, lsr #22
	and     w15, w12, #0x1
	bfi     w14, w15, #4, #1
	and     w15, w12, #0x2
	lsr     w15, w15, #1
	bfi     w13, w15, #4, #1
	and     w15, w12, #0x100
	orr     w14, w14, w15, lsr #3
	and     w15, w12, #0x200
	orr     w13, w13, w15, lsr #4
	and     w15, w12, #0x10000
	orr     w14, w14, w15, lsr #10
	and     w15, w12, #0x20000
	orr     w13, w13, w15, lsr #11
	and     w15, w12, #0x1000000
	orr     w14, w14, w15, lsr #17
	ldp     w15, w11, [x11, #8]
	and     w12, w12, #0x2000000
	orr     w12, w13, w12, lsr #18
	sturh   wzr, [x10, #-2]
	and     w13, w15, #0x1
	orr     w13, w14, w13, lsl #8
	and     w14, w15, #0x2
	orr     w12, w12, w14, lsl #7
	and     w14, w15, #0x100
        orr     w13, w13, w14, lsl #1
	and     w14, w15, #0x200
	orr     w12, w12, w14
	and     w14, w15, #0x10000
	orr     w13, w13, w14, lsr #6
	and     w14, w15, #0x20000
	orr     w12, w12, w14, lsr #7
	and     w14, w15, #0x1000000
	orr     w13, w13, w14, lsr #13
	and     w14, w15, #0x2000000
	orr     w12, w12, w14, lsr #14
	and     w14, w11, #0x1
	orr     w13, w13, w14, lsl #12
	and     w14, w11, #0x2
	orr     w12, w12, w14, lsl #11
	and     w14, w11, #0x100
	orr     w13, w13, w14, lsl #5
	and     w14, w11, #0x200
	orr     w12, w12, w14, lsl #4
	and     w14, w11, #0x10000
	orr     w13, w13, w14, lsr #2
	and     w14, w11, #0x20000
	orr     w12, w12, w14, lsr #3
	lsr     w14, w11, #9
	lsr     w11, w11, #10
	and     w14, w14, #0x8000
	and     w11, w11, #0x8000
	orr     w13, w13, w14
	orr     w11, w12, w11
	sturh   w13, [x10, #-4]
	strh    w11, [x10]
	strh    wzr, [x10, #2]
	add     x10, x10, #8            // =8
	b.lt    .LBB0_2
.LBB0_3:                                // %for.cond.cleanup
	ret
.Lfunc_end0:
	.size   pack2bits_v8, .Lfunc_end0-pack2bits_v8

	.section        ".note.GNU-stack","",@progbits

